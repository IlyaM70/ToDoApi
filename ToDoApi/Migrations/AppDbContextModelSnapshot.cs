// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoApi.Data;

#nullable disable

namespace ToDoApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoApi.Models.Entities.ToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ToDos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = false,
                            CreatedDate = new DateTime(2023, 11, 29, 16, 21, 38, 757, DateTimeKind.Local).AddTicks(4368),
                            Deadline = new DateTime(2023, 11, 30, 16, 21, 38, 757, DateTimeKind.Local).AddTicks(4346),
                            Description = "",
                            Name = "Помыть полы"
                        },
                        new
                        {
                            Id = 2,
                            Completed = false,
                            CreatedDate = new DateTime(2023, 11, 29, 16, 21, 38, 757, DateTimeKind.Local).AddTicks(4371),
                            Deadline = new DateTime(2023, 11, 30, 16, 21, 38, 757, DateTimeKind.Local).AddTicks(4370),
                            Description = "Купить яблоки и бананы",
                            Name = "Сходить в магазин"
                        },
                        new
                        {
                            Id = 3,
                            Completed = true,
                            CreatedDate = new DateTime(2023, 11, 29, 16, 21, 38, 757, DateTimeKind.Local).AddTicks(4373),
                            Deadline = new DateTime(2023, 11, 30, 16, 21, 38, 757, DateTimeKind.Local).AddTicks(4372),
                            Description = "",
                            Name = "Вынести мусор"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
