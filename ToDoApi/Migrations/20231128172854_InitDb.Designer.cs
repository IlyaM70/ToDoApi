// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoApi.Data;

#nullable disable

namespace ToDoApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231128172854_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoApi.Models.Entities.ToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ToDos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = false,
                            CreatedDate = new DateTime(2023, 11, 28, 17, 28, 54, 836, DateTimeKind.Utc).AddTicks(783),
                            Deadline = new DateTime(2023, 11, 29, 17, 28, 54, 836, DateTimeKind.Utc).AddTicks(791),
                            Description = "",
                            Name = "Помыть полы"
                        },
                        new
                        {
                            Id = 2,
                            Completed = false,
                            CreatedDate = new DateTime(2023, 11, 28, 17, 28, 54, 836, DateTimeKind.Utc).AddTicks(797),
                            Deadline = new DateTime(2023, 11, 29, 17, 28, 54, 836, DateTimeKind.Utc).AddTicks(798),
                            Description = "Купить яблоки и бананы",
                            Name = "Сходить в магазин"
                        },
                        new
                        {
                            Id = 3,
                            Completed = true,
                            CreatedDate = new DateTime(2023, 11, 28, 17, 28, 54, 836, DateTimeKind.Utc).AddTicks(799),
                            Deadline = new DateTime(2023, 11, 29, 17, 28, 54, 836, DateTimeKind.Utc).AddTicks(799),
                            Description = "",
                            Name = "Вынести мусор"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
